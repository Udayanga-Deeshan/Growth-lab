// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role{
  CUSTOMER
  ADMIN
}

enum OrderStatus{
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
}

model User{
  id Int  @id @default(autoincrement())
  name String
  email String  @unique
  password  String
  role  Role @default(CUSTOMER)
  createdAt  DateTime   @default(now())
  orders Order[]


}


model Category{
  id Int  @id  @default(autoincrement())
  name String
  products Product[]
}


model Product{
  id  Int @id @default(autoincrement())
  name String 
  description String?
  price Float
  image String?
  stock Int @default(0)
  category Category @relation(fields:[categoryId],references:[id])
  categoryId Int
  createdAt DateTime @default(now())
  orderItems OrderItem[]

}


model Order{
  id  Int  @id @default(autoincrement())
  user User  @relation(fields:[userId],references:[id])
  userId Int
  total Float
  status OrderStatus @default(PENDING)
  createdAt DateTime @default(now())
  items OrderItem[]
}

model OrderItem{
  id Int  @id @default(autoincrement())
  order Order @relation(fields:[orderId],references:[id])
  orderId Int
  product  Product @relation(fields:[productId],references:[id])
  productId  Int
  quantity Int
  unitPrice  Float
}

